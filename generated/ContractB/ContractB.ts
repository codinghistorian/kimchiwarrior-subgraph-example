// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EventB extends ethereum.Event {
  get params(): EventB__Params {
    return new EventB__Params(this);
  }
}

export class EventB__Params {
  _event: EventB;

  constructor(event: EventB) {
    this._event = event;
  }

  get _value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _address(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _flag(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ContractB extends ethereum.SmartContract {
  static bind(address: Address): ContractB {
    return new ContractB("ContractB", address);
  }
}

export class TriggerEventBCall extends ethereum.Call {
  get inputs(): TriggerEventBCall__Inputs {
    return new TriggerEventBCall__Inputs(this);
  }

  get outputs(): TriggerEventBCall__Outputs {
    return new TriggerEventBCall__Outputs(this);
  }
}

export class TriggerEventBCall__Inputs {
  _call: TriggerEventBCall;

  constructor(call: TriggerEventBCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _flag(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class TriggerEventBCall__Outputs {
  _call: TriggerEventBCall;

  constructor(call: TriggerEventBCall) {
    this._call = call;
  }
}
